SELECT * FROM pizzahut.orders;
create table order_details(
	order_details_id int primary key not null,
    order_id int not null,
    pizza_id text not null,
    quantity int not null
);

select * from order_details;
select * from orders;
select * from pizza_types;
select * from pizzas;

-- total pizza ordered.............
select count(order_id) 
from orders

-- calculate the total revenue generated by pizza sales 
SELECT round(sum(order_details.quantity * pizzas.price),2) as total sales
from order_details join pizzas
on pizzas.pizza_id = order_details.pizza_id

SELECT
  ROUND(SUM(order_details.quantity * pizzas.price), 2) AS total_sales
FROM order_details
JOIN pizzas ON pizzas.pizza_id = order_details.pizza_id;

SELECT category,sum(price)
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
group by pizza_types.category

-- identify the highest price pizza...
SELECT pizza_types.name, pizzas.price 
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
order by pizzas.price desc
limit 1;

SELECT pizza_types.name, pizzas.price
FROM pizza_types
JOIN pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY pizzas.price desc
LIMIT 1;

-- identify the most common size pizza ordered
SELECT pizzas.size,count(order_details.order_details_id) as order_count
FROM order_details join pizzas
ON order_details.pizza_id = pizzas.pizza_id
group by pizzas.size
order by count(order_details_id) desc;

-- list the top5 most ordered pizza types along with quantities.
SELECT pizza_types.name, sum(order_details.quantity) as quantity
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.name
order by  quantity desc
limit 5;

-- find the total quantity of pizzas sold based on category
select pizza_types.category, sum(order_details.quantity) as total_orders
from pizza_types join pizzas
on pizza_types.pizza_type_id = pizzas.pizza_type_id
join order_details
on order_details.pizza_id = pizzas.pizza_id
group by pizza_types.category;

-- determine the orders on the basis of hours of the day

select hour(order_time), count(order_id)
from orders
group by hour(order_time)

-- SELECT CATEGORY WISE NO.OF PIZZAS....
SELECT category , count(name)
from pizza_types
group by category;

-- group the order ofpizzas by date andcalculate the average ordered of pizza perday

select avg(quantity) as avg_order_per_day
from
(select orders.order_date, round(sum(order_details.quantity),0) as quantity
from orders join order_details
on orders.order_id = order_details.order_id
group by orders.order_date)as avg_orders;

-- determine thetop3most orderd pizzas based on revenue..
select pizza_types.name, round(sum(order_details.quantity * pizzas.price),0) as revenue
from pizza_types join pizzas
on  pizzas.pizza_type_id= pizza_types.pizza_type_id 
join order_details
on order_details.pizza_id=pizzas.pizza_id  
group by pizza_types.name
order by revenue desc
limit 3;

-- total sales of the pizza category wise based onpercentage of overalll sales...

select pizza_types.category, round(sum(order_details.quantity * pizzas.price),0) as revenue
from pizza_types join pizzas
on pizza_types.pizza_type_id=pizzas.pizza_type_id
join order_details
on order_details.pizza_id=pizzas.pizza_id
group by pizza_types.category
order by revenue desc;